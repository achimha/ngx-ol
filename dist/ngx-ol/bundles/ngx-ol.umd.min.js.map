{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-ol/lib/geom/simplegeometry.component.ts","ng://ngx-ol/lib/sources/source.component.ts","ng://ngx-ol/lib/map.component.ts","ng://ngx-ol/lib/view.component.ts","ng://ngx-ol/lib/graticule.component.ts","ng://ngx-ol/lib/layers/layer.component.ts","ng://ngx-ol/lib/layers/layergroup.component.ts","ng://ngx-ol/lib/layers/layerimage.component.ts","ng://ngx-ol/lib/layers/layertile.component.ts","ng://ngx-ol/lib/layers/layervector.component.ts","ng://ngx-ol/lib/layers/layervectortile.component.ts","ng://ngx-ol/lib/tilegrid.component.ts","ng://ngx-ol/lib/sources/xyz.component.ts","ng://ngx-ol/lib/sources/osm.component.ts","ng://ngx-ol/lib/sources/bingmaps.component.ts","ng://ngx-ol/lib/sources/vector.component.ts","ng://ngx-ol/lib/sources/cluster.component.ts","ng://ngx-ol/lib/tilegridwmts.component.ts","ng://ngx-ol/lib/sources/tilewmts.component.ts","ng://ngx-ol/lib/formats/format.component.ts","ng://ngx-ol/lib/sources/vectortile.component.ts","ng://ngx-ol/lib/sources/tilewms.component.ts","ng://ngx-ol/lib/sources/tilejson.component.ts","ng://ngx-ol/lib/sources/geojson.component.ts","ng://ngx-ol/lib/sources/imagestatic.component.ts","ng://ngx-ol/lib/sources/imagewms.component.ts","ng://ngx-ol/lib/sources/imagearcgisrest.component.ts","ng://ngx-ol/lib/sources/raster.component.ts","ng://ngx-ol/lib/feature.component.ts","ng://ngx-ol/lib/geom/geometrycircle.component.ts","ng://ngx-ol/lib/geom/geometrylinestring.component.ts","ng://ngx-ol/lib/geom/geometrymultilinestring.component.ts","ng://ngx-ol/lib/geom/geometrymultipoint.component.ts","ng://ngx-ol/lib/geom/geometrymultipolygon.component.ts","ng://ngx-ol/lib/geom/geometrypoint.component.ts","ng://ngx-ol/lib/geom/geometrypolygon.component.ts","ng://ngx-ol/lib/content.component.ts","ng://ngx-ol/lib/overlay.component.ts","ng://ngx-ol/lib/coordinate.component.ts","ng://ngx-ol/lib/collectioncoordinates.component.ts","ng://ngx-ol/lib/styles/style.component.ts","ng://ngx-ol/lib/styles/circle.component.ts","ng://ngx-ol/lib/styles/text.component.ts","ng://ngx-ol/lib/styles/stroke.component.ts","ng://ngx-ol/lib/styles/icon.component.ts","ng://ngx-ol/lib/styles/fill.component.ts","ng://ngx-ol/lib/controls/default.component.ts","ng://ngx-ol/lib/controls/control.component.ts","ng://ngx-ol/lib/controls/attribution.component.ts","ng://ngx-ol/lib/controls/fullscreen.component.ts","ng://ngx-ol/lib/controls/mouseposition.component.ts","ng://ngx-ol/lib/controls/overviewmap.component.ts","ng://ngx-ol/lib/controls/rotate.component.ts","ng://ngx-ol/lib/controls/scaleline.component.ts","ng://ngx-ol/lib/controls/zoom.component.ts","ng://ngx-ol/lib/controls/zoomslider.component.ts","ng://ngx-ol/lib/controls/zoomtoextent.component.ts","ng://ngx-ol/lib/formats/mvt.component.ts","ng://ngx-ol/lib/interactions/default.component.ts","ng://ngx-ol/lib/interactions/doubleclickzoom.component.ts","ng://ngx-ol/lib/interactions/draganddrop.component.ts","ng://ngx-ol/lib/interactions/dragbox.component.ts","ng://ngx-ol/lib/interactions/dragpan.component.ts","ng://ngx-ol/lib/interactions/dragrotate.component.ts","ng://ngx-ol/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-ol/lib/interactions/dragzoom.component.ts","ng://ngx-ol/lib/interactions/mousewheelzoom.component.ts","ng://ngx-ol/lib/interactions/pinchzoom.component.ts","ng://ngx-ol/lib/interactions/draw.component.ts","ng://ngx-ol/lib/interactions/select.component.ts","ng://ngx-ol/lib/interactions/modify.component.ts","ng://ngx-ol/lib/interactions/translate.component.ts","ng://ngx-ol/lib/attribution.component.ts","ng://ngx-ol/lib/attributions.component.ts","ng://ngx-ol/lib/sources/utfgrid.component.ts","ng://ngx-ol/public-api.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SimpleGeometryComponent","map","host","componentType","ngOnInit","instance","setGeometry","Input","SourceComponent","ngOnDestroy","setSource","_register","s","MapComponent","width","height","controls","interactions","olClick","EventEmitter","dblClick","moveStart","moveEnd","pointerDrag","pointerMove","onpostrender","postRender","onprerender","propertyChange","singleClick","_this","Map","setTarget","nativeElement","firstElementChild","on","event","emit","ngOnChanges","changes","properties","currentValue","setProperties","ngAfterViewInit","updateSize","ElementRef","Output","Component","selector","template","ViewComponent","zoomAnimation","changeZoom","changeResolution","changeCenter","View","setView","animate","zoom","setZoom","setCenter","GraticuleComponent","Graticule","setMap","ngAfterContentInit","strokeStyle","showLabels","lonLabelPosition","latLabelPosition","LayerComponent","prerender","undefined","postrender","getLayers","push","remove","un","previousValue","LayerGroupComponent","group","_super","call","Group","type","SkipSelf","Optional","LayerImageComponent","Image","LayerTileComponent","Tile","LayerVectorComponent","Vector","LayerVectorTileComponent","VectorTile","TileGridComponent","resolutions","TileGrid","createXYZ","SourceXYZComponent","layer","tileLoadStart","tileLoadEnd","tileLoadError","tileGridXYZ","tileGrid","init","XYZ","Host","ContentChild","SourceXYZComponent_1","providers","provide","useExisting","forwardRef","SourceOsmComponent","OSM","SourceOsmComponent_1","SourceBingmapsComponent","imagerySet","BingMaps","SourceBingmapsComponent_1","SourceVectorComponent","SourceVectorComponent_1","SourceClusterComponent","source","sourceVectorComponent","Cluster","setDistance","distance","SourceClusterComponent_1","TileGridWMTSComponent","WMTS","SourceTileWMTSComponent","url","setLayerSource","SourceWMTS","tileGridWMTS","SourceTileWMTSComponent_1","SourceVectorTileComponent","format","formatComponent","tileGridComponent","FormatComponent","SourceVectorTileComponent_1","SourceTileWMSComponent","TileWMS","updateParams","params","SourceTileWMSComponent_1","SourceTileJSONComponent","TileJSON","SourceTileJSONComponent_1","SourceGeoJSONComponent","GeoJSON","SourceGeoJSONComponent_1","SourceImageStaticComponent","imageLoadStart","imageLoadEnd","imageLoadError","ImageStatic","SourceImageStaticComponent_1","SourceImageWMSComponent","ImageWMS","SourceImageWMSComponent_1","SourceImageArcGISRestComponent","ratio","ImageArcGISRest","SourceImageArcGISRestComponent_1","SourceRasterComponent","beforeOperations","afterOperations","sources","sourceComponent","Raster","SourceRasterComponent_1","FeatureComponent","Feature","id","setId","addFeature","removeFeature","GeometryCircleComponent","Circle","getRadius","radius","setRadius","GeometryLinestringComponent","LineString","GeometryMultiLinestringComponent","MultiLineString","GeometryMultiPointComponent","MultiPoint","GeometryMultiPolygonComponent","MultiPolygon","GeometryPointComponent","Point","GeometryPolygonComponent","Polygon","ContentComponent","elementRef","OverlayComponent","content","element","Overlay","addOverlay","removeOverlay","static","CoordinateComponent","viewHost","geometryPointHost","geometryCircleHost","overlayHost","mapSrid","srid","e","onMapViewChanged","getView","getProjection","getCode","transformCoordinates","get","transformedCoordinates","x","y","transform","setCoordinates","setPosition","CollectionCoordinatesComponent","geometryLinestring","geometryPolygon","geometryMultipoint","geometryMultilinestring","geometryMultipolygon","Error","coordinates","cc","ccc","StyleComponent","featureHost","layerHost","update","changed","Style","setStyle","StyleCircleComponent","setImage","StyleTextComponent","Text","setText","font","setFont","offsetX","setOffsetX","offsetY","setOffsetY","scale","setScale","rotation","setRotation","text","textAlign","setTextAlign","textBaseLine","setTextBaseline","StyleStrokeComponent","styleHost","styleCircleHost","styleTextHost","Stroke","setStroke","stroke","color","setColor","lineCap","setLineCap","lineDash","setLineDash","lineJoin","setLineJoin","miterLimit","setMiterLimit","setWidth","StyleIconComponent","Icon","opacity","setOpacity","src","StyleFillComponent","Fill","setFill","fill","DefaultControlComponent","defaults","forEach","addControl","removeControl","ControlComponent","Control","ControlAttributionComponent","Attribution","ControlFullScreenComponent","FullScreen","ControlMousePositionComponent","MousePosition","ControlOverviewMapComponent","OverviewMap","reloadInstance","ControlRotateComponent","Rotate","ControlScaleLineComponent","ScaleLine","ControlZoomComponent","Zoom","ControlZoomSliderComponent","ZoomSlider","ControlZoomToExtentComponent","ZoomToExtent","FormatMVTComponent","MVT","FormatMVTComponent_1","DefaultInteractionComponent","addInteraction","removeInteraction","DoubleClickZoomInteractionComponent","DoubleClickZoom","DragAndDropInteractionComponent","DragAndDrop","DragBoxInteractionComponent","DragBox","DragPanInteractionComponent","DragPan","DragRotateInteractionComponent","DragRotate","DragRotateAndZoomInteractionComponent","DragRotateAndZoom","DragZoomInteractionComponent","DragZoom","MouseWheelZoomInteractionComponent","MouseWheelZoom","PinchZoomInteractionComponent","PinchZoom","DrawInteractionComponent","olChange","olChangeActive","drawEnd","drawStart","Draw","SelectInteractionComponent","olSelect","Select","ModifyInteractionComponent","modifyEnd","modifyStart","Modify","TranslateInteractionComponent","translateEnd","translateStart","translating","Translate","AttributionComponent","label","innerHTML","AttributionsComponent","attributions","cmp","setAttributions","ContentChildren","SourceUTFGridComponent","UTFGrid","SourceUTFGridComponent_1","COMPONENTS","AngularOpenlayersModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { MapComponent } from '../map.component';\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\n\nexport abstract class SimpleGeometryComponent implements OnInit {\n  public instance: SimpleGeometry;\n  public componentType = 'simple-geometry';\n\n  @Input() srid: string;\n\n  constructor(protected map: MapComponent, protected host: FeatureComponent) {}\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport Source from 'ol/source/Source';\n\nimport { LayerComponent } from '../layers/layer.component';\n\nexport abstract class SourceComponent implements OnDestroy {\n  public instance: Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: any;\n\n  protected constructor(protected host: LayerComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n  }\n\n  protected _register(s: Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Map } from 'ol';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport MapEvent from 'ol/MapEvent';\nimport { ObjectEvent } from 'ol/Object';\nimport RenderEvent from 'ol/render/Event';\nimport { Control } from 'ol/control';\nimport { Interaction } from 'ol/interaction';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: HTMLElement | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  olClick: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  dblClick: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  moveStart: EventEmitter<MapEvent>;\n  @Output()\n  moveEnd: EventEmitter<MapEvent>;\n  @Output()\n  pointerDrag: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  pointerMove: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  onpostrender: EventEmitter<RenderEvent>;\n  @Output()\n  postRender: EventEmitter<MapEvent>;\n  @Output()\n  onprerender: EventEmitter<RenderEvent>;\n  @Output()\n  propertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  singleClick: EventEmitter<MapBrowserEvent<MouseEvent>>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: Control[] = [];\n  interactions: Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.olClick = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.dblClick = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.moveStart = new EventEmitter<MapEvent>();\n    this.moveEnd = new EventEmitter<MapEvent>();\n    this.pointerDrag = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.pointerMove = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.onpostrender = new EventEmitter<RenderEvent>();\n    this.postRender = new EventEmitter<MapEvent>();\n    this.onprerender = new EventEmitter<RenderEvent>();\n    this.propertyChange = new EventEmitter<ObjectEvent>();\n    this.singleClick = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent<MouseEvent>) => this.olClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent<MouseEvent>) => this.dblClick.emit(event));\n    this.instance.on('movestart', (event: MapEvent) => this.moveStart.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.moveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent<MouseEvent>) => this.pointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent<MouseEvent>) => this.pointerMove.emit(event));\n    this.instance.on('postrender', (event: RenderEvent) => this.onpostrender.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.postRender.emit(event));\n    // TODO this.instance.on('prerender', (event: RenderEvent) => this.onprerender.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent<MouseEvent>) => this.singleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport View from 'ol/View';\nimport { MapComponent } from './map.component';\nimport { ObjectEvent } from 'ol/Object';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\n\n@Component({\n  selector: 'aol-view',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n  @Input()\n  constrainOnlyCenter: boolean;\n  @Input()\n  smoothExtentConstraint: boolean;\n  @Input()\n  constrainResolution: boolean;\n  @Input()\n  smoothResolutionConstraint: boolean;\n  @Input()\n  showFullExtent: boolean;\n  @Input()\n  multiWorld: boolean;\n\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  changeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  changeResolution: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  changeCenter: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    // TODO this.instance.on('change:zoom', (event: ObjectEvent) => this.changeZoom.emit(event));\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.changeResolution.emit(event));\n    this.instance.on('change:center', (event: ObjectEvent) => this.changeCenter.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          case 'projection':\n            this.instance = new View(this);\n            this.host.instance.setView(this.instance);\n            break;\n          case 'center':\n            /** Work-around: setting the center via setProperties does not work. */\n            this.instance.setCenter(changes[key].currentValue);\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Graticule } from 'ol';\nimport { Stroke } from 'ol/style';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngOnDestroy(): void {\n    this.instance.setMap(null);\n  }\n}\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport Event from 'ol/events/Event';\nimport { MapComponent } from '../map.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  prerender: (evt: Event) => void;\n  @Input()\n  postrender: (evt: Event) => void;\n\n  constructor(protected host: MapComponent | LayerGroupComponent) {}\n\n  ngOnInit() {\n    if (this.prerender !== null && this.prerender !== undefined) {\n      this.instance.on('prerender', this.prerender);\n    }\n    if (this.postrender !== null && this.postrender !== undefined) {\n      this.instance.on('postrender', this.postrender);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'prerender') {\n          this.instance.un('prerender', changes[key].previousValue);\n          this.instance.on('prerender', changes[key].currentValue);\n        }\n        if (key === 'postrender') {\n          this.instance.un('postrender', changes[key].previousValue);\n          this.instance.on('postrender', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { Group } from 'ol/layer';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Image } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { Tile } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Vector } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { StyleFunction } from 'ol/style/Style';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n\n  @Input()\n  renderBuffer: number;\n\n  @Input()\n  style: Style | Style[] | StyleFunction;\n\n  @Input()\n  updateWhileAnimating: boolean;\n\n  @Input()\n  updateWhileInteracting: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { VectorTile } from 'ol/layer';\nimport { Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { StyleFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: any | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: Feature, feature2: Feature) => number;\n  @Input()\n  style: Style | Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { createXYZ } from 'ol/tilegrid';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Size } from 'ol/size';\nimport { XYZ } from 'ol/source';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\nimport TileGrid from 'ol/tilegrid/TileGrid';\n\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction?: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent)\n  tileGridXYZ: TileGridComponent;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Optional()\n    @Host()\n    protected layer?: LayerTileComponent\n  ) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.init();\n    }\n  }\n\n  init() {\n    this.instance = new XYZ(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Optional, Output } from '@angular/core';\nimport { OSM } from 'ol/source';\nimport { AttributionLike } from 'ol/source/Source';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { LoadFunction } from 'ol/Tile';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: ` <div class=\"aol-source-osm\"></div> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Optional()\n    @Host()\n    protected layer?: LayerTileComponent\n  ) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n\n    this.instance = new OSM(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { BingMaps } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: ` <div class=\"aol-source-bingmaps\"></div> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { Vector } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { LoadingStrategy } from 'ol/source/Vector';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: Feature;\n  @Input()\n  strategy: LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { Cluster, Vector } from 'ol/source';\n\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: (feature: Feature) => Point;\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(SourceVectorComponent)\n  sourceVectorComponent: SourceVectorComponent;\n  source: Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('distance')) {\n      this.instance.setDistance(this.distance);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport WMTS from 'ol/tilegrid/WMTS';\nimport { TileGridComponent } from './tilegrid.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: Size[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\nimport { WMTS as SourceWMTS } from 'ol/source';\nimport WMTS from 'ol/tilegrid/WMTS';\nimport { ProjectionLike } from 'ol/proj';\nimport { LoadFunction } from 'ol/Tile';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { RequestEncoding } from 'ol/source/WMTS';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: SourceWMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  tileGrid: WMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: RequestEncoding | undefined;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: any;\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: any;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  @ContentChild(TileGridWMTSComponent)\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new SourceWMTS(this);\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import Feature from 'ol/format/Feature';\n\nexport class FormatComponent {\n  public instance: Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { VectorTile } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent)\n  formatComponent: FormatComponent;\n  format: Feature;\n  @ContentChild(TileGridComponent)\n  tileGridComponent: TileGridComponent;\n  tileGrid: TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileWMS } from 'ol/source';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LoadFunction } from 'ol/Tile';\nimport { ServerType } from 'ol/source/wms';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: { [key: string]: any };\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: ServerType;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { TileJSON } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport FeatureFormat from 'ol/format/Feature';\nimport { Vector } from 'ol/source';\nimport { GeoJSON } from 'ol/format';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  format: FeatureFormat;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new GeoJSON(this);\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { ImageStatic } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { Extent } from 'ol/extent';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { Size } from 'ol/size';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  imageSize?: Size;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  setLayerSource(): void {\n    this.instance = new ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnInit() {\n    this.setLayerSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  forwardRef,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { ImageWMS } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\nimport { ServerType } from 'ol/source/wms';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: ServerType;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  params: { [key: string]: any };\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport ImageArcGISRest from 'ol/source/ImageArcGISRest';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: AttributionLike;\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: LoadFunction;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1.5;\n  @Input() resolutions?: number[];\n  @Input() wrapX?: boolean;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Raster, Source } from 'ol/source';\nimport { Operation, RasterSourceEvent } from 'ol/source/Raster';\n\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: ` <ng-content></ng-content> `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: Raster;\n\n  @Input()\n  operation?: Operation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: any;\n  @Input()\n  operationType?: 'pixel' | 'image';\n\n  @Output()\n  beforeOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n  @Output()\n  afterOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n\n  sources: Source[] = [];\n\n  @ContentChild(SourceComponent)\n  set source(sourceComponent: SourceComponent) {\n    this.sources = [sourceComponent.instance];\n    if (this.instance) {\n      // Openlayer doesn't handle sources update. Just recreate Raster instance.\n      this.init();\n    }\n  }\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.init();\n  }\n\n  init() {\n    this.instance = new Raster(this);\n    this.instance.on('beforeoperations', (event: RasterSourceEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: RasterSourceEvent) => this.afterOperations.emit(event));\n    this._register(this.instance);\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'ol';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: ` <ng-content></ng-content> `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { Circle } from 'ol/geom';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryCircleComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new Circle([0, 0]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { LineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-linestring';\n  public instance: LineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new LineString([\n      [0, 0],\n      [1, 1],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiLineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multilinestring',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryMultiLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multilinestring';\n  public instance: MultiLineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiLineString([\n      [\n        [0, 0],\n        [1, 1],\n      ],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPoint } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipoint',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryMultiPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipoint';\n  public instance: MultiPoint;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPoint([\n      [0, 0],\n      [1, 1],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPolygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipolygon',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryMultiPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipolygon';\n  public instance: MultiPolygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPolygon([\n      [\n        [\n          [0, 0],\n          [1, 1],\n          [0, 1],\n        ],\n      ],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-point';\n  public instance: Point;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Point([0, 0]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Polygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-polygon';\n  public instance: Polygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Polygon([\n      [\n        [0, 0],\n        [1, 1],\n        [0, 1],\n      ],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport Overlay, { PanOptions, Positioning } from 'ol/Overlay';\nimport { ContentComponent } from './content.component';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: HTMLElement;\n  @ContentChild(ContentComponent, { static: true })\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: Positioning;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges, OnInit } from '@angular/core';\nimport { transform } from 'ol/proj';\nimport { MapComponent } from './map.component';\nimport { GeometryPointComponent } from './geom/geometrypoint.component';\nimport { GeometryCircleComponent } from './geom/geometrycircle.component';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: ` <div class=\"aol-coordinate\"></div> `,\n})\nexport class CoordinateComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', (e) => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance.getView().getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target.get(event.key).getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: number[];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = transform([this.x, this.y], this.srid, this.mapSrid);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { GeometryLinestringComponent } from './geom/geometrylinestring.component';\nimport { GeometryPolygonComponent } from './geom/geometrypolygon.component';\nimport { GeometryMultiPointComponent } from './geom/geometrymultipoint.component';\nimport { GeometryMultiLinestringComponent } from './geom/geometrymultilinestring.component';\nimport { GeometryMultiPolygonComponent } from './geom/geometrymultipolygon.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { transform } from 'ol/proj';\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: ` <div class=\"aol-collection-coordinates\"></div> `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  coordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent,\n    @Optional() geometryMultipoint: GeometryMultiPointComponent,\n    @Optional() geometryMultilinestring: GeometryMultiLinestringComponent,\n    @Optional() geometryMultipolygon: GeometryMultiPolygonComponent\n  ) {\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else if (!!geometryMultipoint) {\n      this.host = geometryMultipoint;\n    } else if (!!geometryMultilinestring) {\n      this.host = geometryMultilinestring;\n    } else if (!!geometryMultipolygon) {\n      this.host = geometryMultipolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', (e) => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance.getView().getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target.get(event.key).getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      switch (this.host.componentType) {\n        case 'geometry-linestring':\n        case 'geometry-multipoint':\n          transformedCoordinates = (this.coordinates as Coordinate[]).map((c) => transform(c, this.srid, this.mapSrid));\n          break;\n        case 'geometry-polygon':\n        case 'geometry-multilinestring':\n          transformedCoordinates = (this.coordinates as Coordinate[][]).map((cc) =>\n            cc.map((c) => transform(c, this.srid, this.mapSrid))\n          );\n          break;\n        case 'geometry-multipolygon':\n          transformedCoordinates = (this.coordinates as Coordinate[][][]).map((ccc) =>\n            ccc.map((cc) => cc.map((c) => transform(c, this.srid, this.mapSrid)))\n          );\n          break;\n      }\n    }\n\n    this.host.instance.setCoordinates(transformedCoordinates);\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { Fill, Image, Stroke, Style, Text } from 'ol/style';\nimport { Geometry } from 'ol/geom';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { GeometryFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-style',\n  template: ` <ng-content></ng-content> `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | Geometry | GeometryFunction;\n  @Input()\n  fill: Fill;\n  @Input()\n  image: Image;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  text: Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Circle, Fill, Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: ` <ng-content></ng-content> `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: Circle;\n\n  @Input()\n  fill: Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: Stroke;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.radius) {\n      this.instance.setRadius(changes.radius.currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Text } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: ` <div class=\"aol-style-text\"></div> `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.font) {\n      this.instance.setFont(changes.font.currentValue);\n    }\n    if (changes.offsetX) {\n      this.instance.setOffsetX(changes.offsetX.currentValue);\n    }\n    if (changes.offsetY) {\n      this.instance.setOffsetY(changes.offsetY.currentValue);\n    }\n    if (changes.scale) {\n      this.instance.setScale(changes.scale.currentValue);\n    }\n    if (changes.rotation) {\n      this.instance.setRotation(changes.rotation.currentValue);\n    }\n    if (changes.text) {\n      this.instance.setText(changes.text.currentValue);\n    }\n    if (changes.textAlign) {\n      this.instance.setTextAlign(changes.textAlign.currentValue);\n    }\n    if (changes.textBaseLine) {\n      this.instance.setTextBaseline(changes.textBaseLine.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: ` <div class=\"aol-style-stroke\"></div> `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | ColorLike;\n  @Input()\n  lineCap: CanvasLineCap | undefined;\n  @Input()\n  lineDash: number[];\n  @Input()\n  lineJoin: CanvasLineJoin | undefined;\n  @Input()\n  miterLimit: number;\n  @Input()\n  width: number;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.color) {\n      this.instance.setColor(changes.color.currentValue);\n    }\n    if (changes.lineCap) {\n      this.instance.setLineCap(changes.lineCap.currentValue);\n    }\n    if (changes.lineDash) {\n      this.instance.setLineDash(changes.lineDash.currentValue);\n    }\n    if (changes.lineJoin) {\n      this.instance.setLineJoin(changes.lineJoin.currentValue);\n    }\n    if (changes.miterLimit) {\n      this.instance.setMiterLimit(changes.miterLimit.currentValue);\n    }\n    if (changes.width) {\n      this.instance.setWidth(changes.width.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Icon } from 'ol/style';\n\n// TODO https://github.com/openlayers/openlayers/issues/12694\n// import IconAnchorUnits from 'ol/style/IconAnchorUnits';\n// import IconOrigin from 'ol/style/IconOrigin';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: ` <div class=\"aol-style-icon\"></div> `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: string; // TODO IconAnchorUnits;\n  @Input()\n  anchorYUnits: string; // TODO IconAnchorUnits;\n  @Input()\n  anchorOrigin: string; // IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: string; // IconOrigin;\n  @Input()\n  img: HTMLCanvasElement | HTMLImageElement;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: string; // IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.opacity) {\n      this.instance.setOpacity(changes.opacity.currentValue);\n    }\n    if (changes.rotation) {\n      this.instance.setRotation(changes.rotation.currentValue);\n    }\n    if (changes.scale) {\n      this.instance.setScale(changes.scale.currentValue);\n    }\n    if (changes.src) {\n      this.instance = new Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Fill } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: ` <div class=\"aol-style-fill\"></div> `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.color) {\n      this.instance.setColor(changes.color.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { Control, defaults } from 'ol/control';\nimport { Collection } from 'ol';\nimport { Options as AttributionOptions } from 'ol/control/Attribution';\nimport { Options as RotateOptions } from 'ol/control/Rotate';\nimport { Options as ZoomOptions } from 'ol/control/Zoom';\n\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = defaults(this);\n    this.instance.forEach((c) => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach((c) => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { Control } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Control;\n  element: HTMLElement;\n  @ContentChild(ContentComponent, { static: true })\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Attribution;\n  target: HTMLElement;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FullScreen } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport MousePosition from 'ol/control/MousePosition';\nimport { MapComponent } from '../map.component';\nimport { CoordinateFormat } from 'ol/coordinate';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormat;\n  @Input()\n  projection: ProjectionLike;\n  target: HTMLElement;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Layer } from 'ol/layer';\nimport { View } from 'ol';\nimport { OverviewMap } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnChanges, OnDestroy {\n  instance: OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: Layer[];\n  @Input()\n  target: HTMLElement;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeControl(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance != null && changes.hasOwnProperty('view')) {\n      this.reloadInstance();\n    }\n  }\n\n  private reloadInstance() {\n    this.map.instance.removeControl(this.instance);\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Rotate } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ScaleLine } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Zoom } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | HTMLElement;\n  @Input()\n  zoomOutLabel: string | HTMLElement;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomSlider } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomToExtent } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | HTMLElement;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { FormatComponent } from './format.component';\nimport { MVT } from 'ol/format';\nimport { FeatureClass } from 'ol/Feature';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: MVT;\n\n  @Input()\n  featureClass: FeatureClass;\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { defaults, Interaction } from 'ol/interaction';\nimport { Collection } from 'ol';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = defaults();\n    this.instance.forEach((i) => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach((i) => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DoubleClickZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DragAndDrop } from 'ol/interaction';\nimport FeatureFormat from 'ol/format/Feature';\nimport { MapComponent } from '../map.component';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: DragAndDrop;\n\n  @Input()\n  formatConstructors: FeatureFormat[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: HTMLElement;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragBox } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\nimport { EndCondition } from 'ol/interaction/DragBox';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  boxEndCondition: EndCondition;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragPan } from 'ol/interaction';\nimport Kinetic from 'ol/Kinetic';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: DragPan;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotate } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotate;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotateAndZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotateAndZoom;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MouseWheelZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { PinchZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Draw } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport { Style } from 'ol/style';\nimport { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\nimport { Type } from 'ol/geom/Geometry';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  source?: Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: Type;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: Condition;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  geometryFunction?: GeometryFunction;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: Condition;\n  @Input()\n  freehandCondition?: Condition;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  olChange = new EventEmitter<DrawEvent>();\n  @Output()\n  olChangeActive = new EventEmitter<DrawEvent>();\n  @Output()\n  drawEnd = new EventEmitter<DrawEvent>();\n  @Output()\n  drawStart = new EventEmitter<DrawEvent>();\n  @Output()\n  propertyChange = new EventEmitter<DrawEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Draw(this);\n    this.instance.on('change', (event: DrawEvent) => this.olChange.emit(event));\n    // TODO this.instance.on('change:active', (event: DrawEvent) => this.olChangeActive.emit(event));\n    this.instance.on('drawend', (event: DrawEvent) => this.drawEnd.emit(event));\n    this.instance.on('drawstart', (event: DrawEvent) => this.drawStart.emit(event));\n    // TODO this.instance.on('propertychange', (event: DrawEvent) => this.propertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Select } from 'ol/interaction';\nimport { Layer } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { Collection, Feature } from 'ol';\nimport { SelectEvent, FilterFunction } from 'ol/interaction/Select';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: Select;\n\n  @Input()\n  addCondition?: Condition;\n  @Input()\n  condition?: Condition;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  removeCondition?: Condition;\n  @Input()\n  toggleCondition?: Condition;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: FilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  olChange = new EventEmitter<SelectEvent>();\n  @Output()\n  olSelect = new EventEmitter<SelectEvent>();\n  @Output()\n  propertyChange = new EventEmitter<SelectEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Select(this);\n\n    this.instance.on('change', (event: SelectEvent) => this.olChange.emit(event));\n    this.instance.on('select', (event: SelectEvent) => this.olSelect.emit(event));\n    // TODO this.instance.on('propertychange', (event: SelectEvent) => this.propertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Modify } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { Vector } from 'ol/source';\nimport { ModifyEvent } from 'ol/interaction/Modify';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: Modify;\n\n  @Input()\n  condition?: Condition;\n  @Input()\n  deleteCondition?: Condition;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: Vector;\n\n  @Output()\n  modifyEnd = new EventEmitter<ModifyEvent>();\n  @Output()\n  modifyStart = new EventEmitter<ModifyEvent>();\n  @Output()\n  olChange = new EventEmitter<ModifyEvent>();\n  @Output()\n  olChangeActive = new EventEmitter<ModifyEvent>();\n  @Output()\n  propertyChange = new EventEmitter<ModifyEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Modify(this);\n    this.instance.on('change', (event: ModifyEvent) => this.olChange.emit(event));\n    // TODO this.instance.on('change:active', (event: ModifyEvent) => this.olChangeActive.emit(event));\n    // TODO this.instance.on('propertychange', (event: ModifyEvent) => this.propertyChange.emit(event));\n    this.instance.on('modifyend', (event: ModifyEvent) => this.modifyEnd.emit(event));\n    this.instance.on('modifystart', (event: ModifyEvent) => this.modifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Translate } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Layer } from 'ol/layer';\nimport { TranslateEvent } from 'ol/interaction/Translate';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  olChange: EventEmitter<TranslateEvent>;\n  @Output()\n  propertyChange: EventEmitter<TranslateEvent>;\n  @Output()\n  translateEnd: EventEmitter<TranslateEvent>;\n  @Output()\n  translateStart: EventEmitter<TranslateEvent>;\n  @Output()\n  translating: EventEmitter<TranslateEvent>;\n\n  constructor(private map: MapComponent) {\n    this.olChange = new EventEmitter<TranslateEvent>();\n    this.propertyChange = new EventEmitter<TranslateEvent>();\n    this.translateEnd = new EventEmitter<TranslateEvent>();\n    this.translateStart = new EventEmitter<TranslateEvent>();\n    this.translating = new EventEmitter<TranslateEvent>();\n  }\n\n  ngOnInit() {\n    this.instance = new Translate(this);\n\n    this.instance.on('change', (event: TranslateEvent) => this.olChange.emit(event));\n    // TODO this.instance.on('propertychange', (event: TranslateEvent) => this.propertyChange.emit(event));\n    this.instance.on('translateend', (event: TranslateEvent) => this.translateEnd.emit(event));\n    this.instance.on('translatestart', (event: TranslateEvent) => this.translateStart.emit(event));\n    this.instance.on('translating', (event: TranslateEvent) => this.translating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  label: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.label = this.elementRef.nativeElement.innerHTML;\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<string>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map((cmp) => cmp.label);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { UTFGrid } from 'ol/source';\nimport { Config } from 'ol/source/TileJSON';\n\n@Component({\n  selector: 'aol-source-utfgrid',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceUTFGridComponent) }],\n})\nexport class SourceUTFGridComponent extends SourceComponent implements OnInit {\n  instance: UTFGrid;\n  @Input() tileJSON: Config;\n  @Input() url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new UTFGrid(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SimpleGeometryComponent } from './lib/geom/simplegeometry.component';\nimport { SourceComponent } from './lib/sources/source.component';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport { GeometryCircleComponent } from './lib/geom/geometrycircle.component';\nimport { GeometryLinestringComponent } from './lib/geom/geometrylinestring.component';\nimport { GeometryMultiLinestringComponent } from './lib/geom/geometrymultilinestring.component';\nimport { GeometryMultiPointComponent } from './lib/geom/geometrymultipoint.component';\nimport { GeometryMultiPolygonComponent } from './lib/geom/geometrymultipolygon.component';\nimport { GeometryPointComponent } from './lib/geom/geometrypoint.component';\nimport { GeometryPolygonComponent } from './lib/geom/geometrypolygon.component';\nimport { CoordinateComponent } from './lib/coordinate.component';\nimport { CollectionCoordinatesComponent } from './lib/collectioncoordinates.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionsComponent } from './lib/attributions.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { SourceUTFGridComponent } from './lib/sources/utfgrid.component';\nimport { LayerComponent } from './lib/layers/layer.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  SimpleGeometryComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"]}