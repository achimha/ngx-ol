{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-ol/lib/geom/simplegeometry.component.ts","ng://ngx-ol/lib/sources/source.component.ts","ng://ngx-ol/lib/map.component.ts","ng://ngx-ol/lib/view.component.ts","ng://ngx-ol/lib/graticule.component.ts","ng://ngx-ol/lib/layers/layer.component.ts","ng://ngx-ol/lib/layers/layergroup.component.ts","ng://ngx-ol/lib/layers/layerimage.component.ts","ng://ngx-ol/lib/layers/layertile.component.ts","ng://ngx-ol/lib/layers/layervector.component.ts","ng://ngx-ol/lib/layers/layervectortile.component.ts","ng://ngx-ol/lib/tilegrid.component.ts","ng://ngx-ol/lib/sources/xyz.component.ts","ng://ngx-ol/lib/sources/osm.component.ts","ng://ngx-ol/lib/sources/bingmaps.component.ts","ng://ngx-ol/lib/sources/vector.component.ts","ng://ngx-ol/lib/sources/cluster.component.ts","ng://ngx-ol/lib/tilegridwmts.component.ts","ng://ngx-ol/lib/sources/tilewmts.component.ts","ng://ngx-ol/lib/formats/format.component.ts","ng://ngx-ol/lib/sources/vectortile.component.ts","ng://ngx-ol/lib/sources/tilewms.component.ts","ng://ngx-ol/lib/sources/tilejson.component.ts","ng://ngx-ol/lib/sources/geojson.component.ts","ng://ngx-ol/lib/sources/imagestatic.component.ts","ng://ngx-ol/lib/sources/imagewms.component.ts","ng://ngx-ol/lib/sources/imagearcgisrest.component.ts","ng://ngx-ol/lib/sources/raster.component.ts","ng://ngx-ol/lib/feature.component.ts","ng://ngx-ol/lib/geom/geometrycircle.component.ts","ng://ngx-ol/lib/geom/geometrylinestring.component.ts","ng://ngx-ol/lib/geom/geometrymultilinestring.component.ts","ng://ngx-ol/lib/geom/geometrymultipoint.component.ts","ng://ngx-ol/lib/geom/geometrymultipolygon.component.ts","ng://ngx-ol/lib/geom/geometrypoint.component.ts","ng://ngx-ol/lib/geom/geometrypolygon.component.ts","ng://ngx-ol/lib/content.component.ts","ng://ngx-ol/lib/overlay.component.ts","ng://ngx-ol/lib/coordinate.component.ts","ng://ngx-ol/lib/collectioncoordinates.component.ts","ng://ngx-ol/lib/styles/style.component.ts","ng://ngx-ol/lib/styles/circle.component.ts","ng://ngx-ol/lib/styles/text.component.ts","ng://ngx-ol/lib/styles/stroke.component.ts","ng://ngx-ol/lib/styles/icon.component.ts","ng://ngx-ol/lib/styles/fill.component.ts","ng://ngx-ol/lib/controls/default.component.ts","ng://ngx-ol/lib/controls/control.component.ts","ng://ngx-ol/lib/controls/attribution.component.ts","ng://ngx-ol/lib/controls/fullscreen.component.ts","ng://ngx-ol/lib/controls/mouseposition.component.ts","ng://ngx-ol/lib/controls/overviewmap.component.ts","ng://ngx-ol/lib/controls/rotate.component.ts","ng://ngx-ol/lib/controls/scaleline.component.ts","ng://ngx-ol/lib/controls/zoom.component.ts","ng://ngx-ol/lib/controls/zoomslider.component.ts","ng://ngx-ol/lib/controls/zoomtoextent.component.ts","ng://ngx-ol/lib/formats/mvt.component.ts","ng://ngx-ol/lib/interactions/default.component.ts","ng://ngx-ol/lib/interactions/doubleclickzoom.component.ts","ng://ngx-ol/lib/interactions/draganddrop.component.ts","ng://ngx-ol/lib/interactions/dragbox.component.ts","ng://ngx-ol/lib/interactions/dragpan.component.ts","ng://ngx-ol/lib/interactions/dragrotate.component.ts","ng://ngx-ol/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-ol/lib/interactions/dragzoom.component.ts","ng://ngx-ol/lib/interactions/mousewheelzoom.component.ts","ng://ngx-ol/lib/interactions/pinchzoom.component.ts","ng://ngx-ol/lib/interactions/draw.component.ts","ng://ngx-ol/lib/interactions/select.component.ts","ng://ngx-ol/lib/interactions/modify.component.ts","ng://ngx-ol/lib/interactions/translate.component.ts","ng://ngx-ol/lib/attribution.component.ts","ng://ngx-ol/lib/attributions.component.ts","ng://ngx-ol/lib/sources/utfgrid.component.ts","ng://ngx-ol/public-api.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SimpleGeometryComponent","map","host","componentType","ngOnInit","instance","setGeometry","tslib_1.__decorate","Input","SourceComponent","ngOnDestroy","setSource","_register","s","MapComponent","width","height","controls","interactions","olClick","EventEmitter","dblClick","moveStart","moveEnd","pointerDrag","pointerMove","onpostrender","postRender","onprerender","propertyChange","singleClick","_this","Map","setTarget","nativeElement","firstElementChild","on","event","emit","ngOnChanges","changes","properties","currentValue","setProperties","ngAfterViewInit","updateSize","ElementRef","Output","Component","selector","template","ViewComponent","zoomAnimation","changeZoom","changeResolution","changeCenter","View","setView","animate","zoom","setZoom","setCenter","GraticuleComponent","Graticule","setMap","ngAfterContentInit","strokeStyle","showLabels","lonLabelPosition","latLabelPosition","LayerComponent","prerender","undefined","postrender","getLayers","push","remove","un","previousValue","LayerGroupComponent","group","_super","call","tslib_1.__extends","Group","type","SkipSelf","Optional","tslib_1.__param","LayerImageComponent","Image","LayerTileComponent","Tile","LayerVectorComponent","Vector","LayerVectorTileComponent","VectorTile","TileGridComponent","resolutions","TileGrid","createXYZ","SourceXYZComponent","layer","tileLoadStart","tileLoadEnd","tileLoadError","tileGridXYZ","tileGrid","init","XYZ","Host","ContentChild","static","SourceXYZComponent_1","providers","provide","useExisting","forwardRef","SourceOsmComponent","OSM","SourceOsmComponent_1","SourceBingmapsComponent","imagerySet","BingMaps","SourceBingmapsComponent_1","SourceVectorComponent","SourceVectorComponent_1","SourceClusterComponent","source","sourceVectorComponent","Cluster","setDistance","distance","SourceClusterComponent_1","TileGridWMTSComponent","WMTS","SourceTileWMTSComponent","url","setLayerSource","SourceWMTS","tileGridWMTS","SourceTileWMTSComponent_1","SourceVectorTileComponent","format","formatComponent","tileGridComponent","FormatComponent","SourceVectorTileComponent_1","SourceTileWMSComponent","TileWMS","updateParams","params","SourceTileWMSComponent_1","SourceTileJSONComponent","TileJSON","SourceTileJSONComponent_1","SourceGeoJSONComponent","GeoJSON","SourceGeoJSONComponent_1","SourceImageStaticComponent","imageLoadStart","imageLoadEnd","imageLoadError","ImageStatic","SourceImageStaticComponent_1","SourceImageWMSComponent","ImageWMS","SourceImageWMSComponent_1","SourceImageArcGISRestComponent","ratio","ImageArcGISRest","SourceImageArcGISRestComponent_1","SourceRasterComponent","beforeOperations","afterOperations","sources","sourceComponent","Raster","SourceRasterComponent_1","FeatureComponent","Feature","id","setId","addFeature","removeFeature","GeometryCircleComponent","Circle","getRadius","radius","setRadius","GeometryLinestringComponent","LineString","GeometryMultiLinestringComponent","MultiLineString","GeometryMultiPointComponent","MultiPoint","GeometryMultiPolygonComponent","MultiPolygon","GeometryPointComponent","Point","GeometryPolygonComponent","Polygon","ContentComponent","elementRef","OverlayComponent","content","element","Overlay","addOverlay","removeOverlay","CoordinateComponent","viewHost","geometryPointHost","geometryCircleHost","overlayHost","mapSrid","srid","e","onMapViewChanged","getView","getProjection","getCode","transformCoordinates","get","transformedCoordinates","x","y","transform","setCoordinates","setPosition","CollectionCoordinatesComponent","geometryLinestring","geometryPolygon","geometryMultipoint","geometryMultilinestring","geometryMultipolygon","Error","coordinates","cc","ccc","StyleComponent","featureHost","layerHost","update","changed","Style","setStyle","StyleCircleComponent","setImage","StyleTextComponent","Text","setText","font","setFont","offsetX","setOffsetX","offsetY","setOffsetY","scale","setScale","rotation","setRotation","text","textAlign","setTextAlign","textBaseLine","setTextBaseline","StyleStrokeComponent","styleHost","styleCircleHost","styleTextHost","Stroke","setStroke","stroke","color","setColor","lineCap","setLineCap","lineDash","setLineDash","lineJoin","setLineJoin","miterLimit","setMiterLimit","setWidth","StyleIconComponent","Icon","opacity","setOpacity","src","StyleFillComponent","Fill","setFill","fill","DefaultControlComponent","defaults","forEach","addControl","removeControl","ControlComponent","Control","ControlAttributionComponent","Attribution","ControlFullScreenComponent","FullScreen","ControlMousePositionComponent","MousePosition","ControlOverviewMapComponent","OverviewMap","reloadInstance","ControlRotateComponent","Rotate","ControlScaleLineComponent","ScaleLine","ControlZoomComponent","Zoom","ControlZoomSliderComponent","ZoomSlider","ControlZoomToExtentComponent","ZoomToExtent","FormatMVTComponent","MVT","FormatMVTComponent_1","DefaultInteractionComponent","addInteraction","removeInteraction","DoubleClickZoomInteractionComponent","DoubleClickZoom","DragAndDropInteractionComponent","DragAndDrop","DragBoxInteractionComponent","DragBox","DragPanInteractionComponent","DragPan","DragRotateInteractionComponent","DragRotate","DragRotateAndZoomInteractionComponent","DragRotateAndZoom","DragZoomInteractionComponent","DragZoom","MouseWheelZoomInteractionComponent","MouseWheelZoom","PinchZoomInteractionComponent","PinchZoom","DrawInteractionComponent","olChange","olChangeActive","drawEnd","drawStart","Draw","SelectInteractionComponent","olSelect","Select","ModifyInteractionComponent","modifyEnd","modifyStart","Modify","TranslateInteractionComponent","translateEnd","translateStart","translating","Translate","AttributionComponent","label","innerHTML","AttributionsComponent","attributions","cmp","setAttributions","ContentChildren","SourceUTFGridComponent","UTFGrid","SourceUTFGridComponent_1","COMPONENTS","AngularOpenlayersModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { MapComponent } from '../map.component';\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\n\nexport abstract class SimpleGeometryComponent implements OnInit {\n  public instance: SimpleGeometry;\n  public componentType = 'simple-geometry';\n\n  @Input() srid: string;\n\n  constructor(protected map: MapComponent, protected host: FeatureComponent) {}\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport Source from 'ol/source/Source';\n\nimport { LayerComponent } from '../layers/layer.component';\n\nexport abstract class SourceComponent implements OnDestroy {\n  public instance: Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: any;\n\n  protected constructor(protected host: LayerComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n  }\n\n  protected _register(s: Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Map } from 'ol';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport MapEvent from 'ol/MapEvent';\nimport { ObjectEvent } from 'ol/Object';\nimport RenderEvent from 'ol/render/Event';\nimport { Control } from 'ol/control';\nimport { Interaction } from 'ol/interaction';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: HTMLElement | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  olClick: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  dblClick: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  moveStart: EventEmitter<MapEvent>;\n  @Output()\n  moveEnd: EventEmitter<MapEvent>;\n  @Output()\n  pointerDrag: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  pointerMove: EventEmitter<MapBrowserEvent<MouseEvent>>;\n  @Output()\n  onpostrender: EventEmitter<RenderEvent>;\n  @Output()\n  postRender: EventEmitter<MapEvent>;\n  @Output()\n  onprerender: EventEmitter<RenderEvent>;\n  @Output()\n  propertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  singleClick: EventEmitter<MapBrowserEvent<MouseEvent>>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: Control[] = [];\n  interactions: Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.olClick = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.dblClick = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.moveStart = new EventEmitter<MapEvent>();\n    this.moveEnd = new EventEmitter<MapEvent>();\n    this.pointerDrag = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.pointerMove = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n    this.onpostrender = new EventEmitter<RenderEvent>();\n    this.postRender = new EventEmitter<MapEvent>();\n    this.onprerender = new EventEmitter<RenderEvent>();\n    this.propertyChange = new EventEmitter<ObjectEvent>();\n    this.singleClick = new EventEmitter<MapBrowserEvent<MouseEvent>>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent<MouseEvent>) => this.olClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent<MouseEvent>) => this.dblClick.emit(event));\n    this.instance.on('movestart', (event: MapEvent) => this.moveStart.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.moveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent<MouseEvent>) => this.pointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent<MouseEvent>) => this.pointerMove.emit(event));\n    this.instance.on('postrender', (event: RenderEvent) => this.onpostrender.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.postRender.emit(event));\n    // TODO this.instance.on('prerender', (event: RenderEvent) => this.onprerender.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent<MouseEvent>) => this.singleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport View from 'ol/View';\nimport { MapComponent } from './map.component';\nimport { ObjectEvent } from 'ol/Object';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\n\n@Component({\n  selector: 'aol-view',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n  @Input()\n  constrainOnlyCenter: boolean;\n  @Input()\n  smoothExtentConstraint: boolean;\n  @Input()\n  constrainResolution: boolean;\n  @Input()\n  smoothResolutionConstraint: boolean;\n  @Input()\n  showFullExtent: boolean;\n  @Input()\n  multiWorld: boolean;\n\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  changeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  changeResolution: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  changeCenter: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    // TODO this.instance.on('change:zoom', (event: ObjectEvent) => this.changeZoom.emit(event));\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.changeResolution.emit(event));\n    this.instance.on('change:center', (event: ObjectEvent) => this.changeCenter.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          case 'projection':\n            this.instance = new View(this);\n            this.host.instance.setView(this.instance);\n            break;\n          case 'center':\n            /** Work-around: setting the center via setProperties does not work. */\n            this.instance.setCenter(changes[key].currentValue);\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Graticule } from 'ol';\nimport { Stroke } from 'ol/style';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngOnDestroy(): void {\n    this.instance.setMap(null);\n  }\n}\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport Event from 'ol/events/Event';\nimport { MapComponent } from '../map.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  prerender: (evt: Event) => void;\n  @Input()\n  postrender: (evt: Event) => void;\n\n  constructor(protected host: MapComponent | LayerGroupComponent) {}\n\n  ngOnInit() {\n    if (this.prerender !== null && this.prerender !== undefined) {\n      this.instance.on('prerender', this.prerender);\n    }\n    if (this.postrender !== null && this.postrender !== undefined) {\n      this.instance.on('postrender', this.postrender);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'prerender') {\n          this.instance.un('prerender', changes[key].previousValue);\n          this.instance.on('prerender', changes[key].currentValue);\n        }\n        if (key === 'postrender') {\n          this.instance.un('postrender', changes[key].previousValue);\n          this.instance.on('postrender', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { Group } from 'ol/layer';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Image } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { Tile } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Vector } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { StyleFunction } from 'ol/style/Style';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n\n  @Input()\n  renderBuffer: number;\n\n  @Input()\n  style: Style | Style[] | StyleFunction;\n\n  @Input()\n  updateWhileAnimating: boolean;\n\n  @Input()\n  updateWhileInteracting: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { VectorTile } from 'ol/layer';\nimport { Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { StyleFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: ` <ng-content></ng-content> `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: any | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: Feature, feature2: Feature) => number;\n  @Input()\n  style: Style | Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { createXYZ } from 'ol/tilegrid';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Size } from 'ol/size';\nimport { XYZ } from 'ol/source';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\nimport TileGrid from 'ol/tilegrid/TileGrid';\n\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction?: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent, { static: false })\n  tileGridXYZ: TileGridComponent;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Optional()\n    @Host()\n    protected layer?: LayerTileComponent\n  ) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.init();\n    }\n  }\n\n  init() {\n    this.instance = new XYZ(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Optional, Output } from '@angular/core';\nimport { OSM } from 'ol/source';\nimport { AttributionLike } from 'ol/source/Source';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { LoadFunction } from 'ol/Tile';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: ` <div class=\"aol-source-osm\"></div> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Optional()\n    @Host()\n    protected layer?: LayerTileComponent\n  ) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n\n    this.instance = new OSM(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { BingMaps } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: ` <div class=\"aol-source-bingmaps\"></div> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { Vector } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { LoadingStrategy } from 'ol/source/Vector';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: Feature;\n  @Input()\n  strategy: LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { Cluster, Vector } from 'ol/source';\n\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: (feature: Feature) => Point;\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(SourceVectorComponent, { static: false })\n  sourceVectorComponent: SourceVectorComponent;\n  source: Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('distance')) {\n      this.instance.setDistance(this.distance);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport WMTS from 'ol/tilegrid/WMTS';\nimport { TileGridComponent } from './tilegrid.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: Size[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\nimport { WMTS as SourceWMTS } from 'ol/source';\nimport WMTS from 'ol/tilegrid/WMTS';\nimport { ProjectionLike } from 'ol/proj';\nimport { LoadFunction } from 'ol/Tile';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport { RequestEncoding } from 'ol/source/WMTS';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: SourceWMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  tileGrid: WMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: RequestEncoding | undefined;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: any;\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: any;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  @ContentChild(TileGridWMTSComponent, { static: false })\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new SourceWMTS(this);\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import Feature from 'ol/format/Feature';\n\nexport class FormatComponent {\n  public instance: Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { VectorTile } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent, { static: false })\n  formatComponent: FormatComponent;\n  format: Feature;\n  @ContentChild(TileGridComponent, { static: false })\n  tileGridComponent: TileGridComponent;\n  tileGrid: TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileWMS } from 'ol/source';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LoadFunction } from 'ol/Tile';\nimport { ServerType } from 'ol/source/wms';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: { [key: string]: any };\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: ServerType;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { TileJSON } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport FeatureFormat from 'ol/format/Feature';\nimport { Vector } from 'ol/source';\nimport { GeoJSON } from 'ol/format';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  format: FeatureFormat;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new GeoJSON(this);\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { ImageStatic } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { Extent } from 'ol/extent';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { Size } from 'ol/size';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  imageSize?: Size;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  setLayerSource(): void {\n    this.instance = new ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnInit() {\n    this.setLayerSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  forwardRef,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { ImageWMS } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\nimport { ServerType } from 'ol/source/wms';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: ServerType;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  params: { [key: string]: any };\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport ImageArcGISRest from 'ol/source/ImageArcGISRest';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: AttributionLike;\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: LoadFunction;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1.5;\n  @Input() resolutions?: number[];\n  @Input() wrapX?: boolean;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Raster, Source } from 'ol/source';\nimport { Operation, RasterSourceEvent } from 'ol/source/Raster';\n\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: ` <ng-content></ng-content> `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: Raster;\n\n  @Input()\n  operation?: Operation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: any;\n  @Input()\n  operationType?: 'pixel' | 'image';\n\n  @Output()\n  beforeOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n  @Output()\n  afterOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n\n  sources: Source[] = [];\n\n  @ContentChild(SourceComponent, { static: false })\n  set source(sourceComponent: SourceComponent) {\n    this.sources = [sourceComponent.instance];\n    if (this.instance) {\n      // Openlayer doesn't handle sources update. Just recreate Raster instance.\n      this.init();\n    }\n  }\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.init();\n  }\n\n  init() {\n    this.instance = new Raster(this);\n    this.instance.on('beforeoperations', (event: RasterSourceEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: RasterSourceEvent) => this.afterOperations.emit(event));\n    this._register(this.instance);\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'ol';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: ` <ng-content></ng-content> `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { Circle } from 'ol/geom';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryCircleComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new Circle([0, 0]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { LineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-linestring';\n  public instance: LineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new LineString([\n      [0, 0],\n      [1, 1],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiLineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multilinestring',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryMultiLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multilinestring';\n  public instance: MultiLineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiLineString([\n      [\n        [0, 0],\n        [1, 1],\n      ],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPoint } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipoint',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryMultiPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipoint';\n  public instance: MultiPoint;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPoint([\n      [0, 0],\n      [1, 1],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPolygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipolygon',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryMultiPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipolygon';\n  public instance: MultiPolygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPolygon([\n      [\n        [\n          [0, 0],\n          [1, 1],\n          [0, 1],\n        ],\n      ],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-point';\n  public instance: Point;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Point([0, 0]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Polygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: ` <ng-content></ng-content> `,\n})\nexport class GeometryPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-polygon';\n  public instance: Polygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Polygon([\n      [\n        [0, 0],\n        [1, 1],\n        [0, 1],\n      ],\n    ]);\n    super.ngOnInit();\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport Overlay, { PanOptions, Positioning } from 'ol/Overlay';\nimport { ContentComponent } from './content.component';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: HTMLElement;\n  @ContentChild(ContentComponent, { static: true })\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: Positioning;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges, OnInit } from '@angular/core';\nimport { transform } from 'ol/proj';\nimport { MapComponent } from './map.component';\nimport { GeometryPointComponent } from './geom/geometrypoint.component';\nimport { GeometryCircleComponent } from './geom/geometrycircle.component';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: ` <div class=\"aol-coordinate\"></div> `,\n})\nexport class CoordinateComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', (e) => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance.getView().getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target.get(event.key).getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: number[];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = transform([this.x, this.y], this.srid, this.mapSrid);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { GeometryLinestringComponent } from './geom/geometrylinestring.component';\nimport { GeometryPolygonComponent } from './geom/geometrypolygon.component';\nimport { GeometryMultiPointComponent } from './geom/geometrymultipoint.component';\nimport { GeometryMultiLinestringComponent } from './geom/geometrymultilinestring.component';\nimport { GeometryMultiPolygonComponent } from './geom/geometrymultipolygon.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { transform } from 'ol/proj';\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: ` <div class=\"aol-collection-coordinates\"></div> `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  coordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent,\n    @Optional() geometryMultipoint: GeometryMultiPointComponent,\n    @Optional() geometryMultilinestring: GeometryMultiLinestringComponent,\n    @Optional() geometryMultipolygon: GeometryMultiPolygonComponent\n  ) {\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else if (!!geometryMultipoint) {\n      this.host = geometryMultipoint;\n    } else if (!!geometryMultilinestring) {\n      this.host = geometryMultilinestring;\n    } else if (!!geometryMultipolygon) {\n      this.host = geometryMultipolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', (e) => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance.getView().getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target.get(event.key).getProjection().getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      switch (this.host.componentType) {\n        case 'geometry-linestring':\n        case 'geometry-multipoint':\n          transformedCoordinates = (this.coordinates as Coordinate[]).map((c) => transform(c, this.srid, this.mapSrid));\n          break;\n        case 'geometry-polygon':\n        case 'geometry-multilinestring':\n          transformedCoordinates = (this.coordinates as Coordinate[][]).map((cc) =>\n            cc.map((c) => transform(c, this.srid, this.mapSrid))\n          );\n          break;\n        case 'geometry-multipolygon':\n          transformedCoordinates = (this.coordinates as Coordinate[][][]).map((ccc) =>\n            ccc.map((cc) => cc.map((c) => transform(c, this.srid, this.mapSrid)))\n          );\n          break;\n      }\n    }\n\n    this.host.instance.setCoordinates(transformedCoordinates);\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { Fill, Image, Stroke, Style, Text } from 'ol/style';\nimport { Geometry } from 'ol/geom';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { GeometryFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-style',\n  template: ` <ng-content></ng-content> `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | Geometry | GeometryFunction;\n  @Input()\n  fill: Fill;\n  @Input()\n  image: Image;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  text: Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Circle, Fill, Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: ` <ng-content></ng-content> `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: Circle;\n\n  @Input()\n  fill: Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: Stroke;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.radius) {\n      this.instance.setRadius(changes.radius.currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Text } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: ` <div class=\"aol-style-text\"></div> `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.font) {\n      this.instance.setFont(changes.font.currentValue);\n    }\n    if (changes.offsetX) {\n      this.instance.setOffsetX(changes.offsetX.currentValue);\n    }\n    if (changes.offsetY) {\n      this.instance.setOffsetY(changes.offsetY.currentValue);\n    }\n    if (changes.scale) {\n      this.instance.setScale(changes.scale.currentValue);\n    }\n    if (changes.rotation) {\n      this.instance.setRotation(changes.rotation.currentValue);\n    }\n    if (changes.text) {\n      this.instance.setText(changes.text.currentValue);\n    }\n    if (changes.textAlign) {\n      this.instance.setTextAlign(changes.textAlign.currentValue);\n    }\n    if (changes.textBaseLine) {\n      this.instance.setTextBaseline(changes.textBaseLine.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: ` <div class=\"aol-style-stroke\"></div> `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | ColorLike;\n  @Input()\n  lineCap: CanvasLineCap | undefined;\n  @Input()\n  lineDash: number[];\n  @Input()\n  lineJoin: CanvasLineJoin | undefined;\n  @Input()\n  miterLimit: number;\n  @Input()\n  width: number;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.color) {\n      this.instance.setColor(changes.color.currentValue);\n    }\n    if (changes.lineCap) {\n      this.instance.setLineCap(changes.lineCap.currentValue);\n    }\n    if (changes.lineDash) {\n      this.instance.setLineDash(changes.lineDash.currentValue);\n    }\n    if (changes.lineJoin) {\n      this.instance.setLineJoin(changes.lineJoin.currentValue);\n    }\n    if (changes.miterLimit) {\n      this.instance.setMiterLimit(changes.miterLimit.currentValue);\n    }\n    if (changes.width) {\n      this.instance.setWidth(changes.width.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Icon } from 'ol/style';\n\n// TODO https://github.com/openlayers/openlayers/issues/12694\n// import IconAnchorUnits from 'ol/style/IconAnchorUnits';\n// import IconOrigin from 'ol/style/IconOrigin';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: ` <div class=\"aol-style-icon\"></div> `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: string; // TODO IconAnchorUnits;\n  @Input()\n  anchorYUnits: string; // TODO IconAnchorUnits;\n  @Input()\n  anchorOrigin: string; // IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: string; // IconOrigin;\n  @Input()\n  img: HTMLCanvasElement | HTMLImageElement;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: string; // IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.opacity) {\n      this.instance.setOpacity(changes.opacity.currentValue);\n    }\n    if (changes.rotation) {\n      this.instance.setRotation(changes.rotation.currentValue);\n    }\n    if (changes.scale) {\n      this.instance.setScale(changes.scale.currentValue);\n    }\n    if (changes.src) {\n      this.instance = new Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Fill } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: ` <div class=\"aol-style-fill\"></div> `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.color) {\n      this.instance.setColor(changes.color.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { Control, defaults } from 'ol/control';\nimport { Collection } from 'ol';\nimport { Options as AttributionOptions } from 'ol/control/Attribution';\nimport { Options as RotateOptions } from 'ol/control/Rotate';\nimport { Options as ZoomOptions } from 'ol/control/Zoom';\n\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = defaults(this);\n    this.instance.forEach((c) => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach((c) => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { Control } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\n\n@Component({\n  selector: 'aol-control',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Control;\n  element: HTMLElement;\n  @ContentChild(ContentComponent, { static: true })\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Attribution;\n  target: HTMLElement;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FullScreen } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport MousePosition from 'ol/control/MousePosition';\nimport { MapComponent } from '../map.component';\nimport { CoordinateFormat } from 'ol/coordinate';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormat;\n  @Input()\n  projection: ProjectionLike;\n  target: HTMLElement;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Layer } from 'ol/layer';\nimport { View } from 'ol';\nimport { OverviewMap } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnChanges, OnDestroy {\n  instance: OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: Layer[];\n  @Input()\n  target: HTMLElement;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeControl(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance != null && changes.hasOwnProperty('view')) {\n      this.reloadInstance();\n    }\n  }\n\n  private reloadInstance() {\n    this.map.instance.removeControl(this.instance);\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Rotate } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ScaleLine } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Zoom } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | HTMLElement;\n  @Input()\n  zoomOutLabel: string | HTMLElement;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomSlider } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomToExtent } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | HTMLElement;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { FormatComponent } from './format.component';\nimport { MVT } from 'ol/format';\nimport { FeatureClass } from 'ol/Feature';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: MVT;\n\n  @Input()\n  featureClass: FeatureClass;\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { defaults, Interaction } from 'ol/interaction';\nimport { Collection } from 'ol';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = defaults();\n    this.instance.forEach((i) => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach((i) => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DoubleClickZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DragAndDrop } from 'ol/interaction';\nimport FeatureFormat from 'ol/format/Feature';\nimport { MapComponent } from '../map.component';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: DragAndDrop;\n\n  @Input()\n  formatConstructors: FeatureFormat[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: HTMLElement;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragBox } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\nimport { EndCondition } from 'ol/interaction/DragBox';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  boxEndCondition: EndCondition;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragPan } from 'ol/interaction';\nimport Kinetic from 'ol/Kinetic';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: DragPan;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotate } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotate;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotateAndZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotateAndZoom;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MouseWheelZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { PinchZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Draw } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport { Style } from 'ol/style';\nimport { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\nimport { Type } from 'ol/geom/Geometry';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  source?: Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: Type;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: Condition;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  geometryFunction?: GeometryFunction;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: Condition;\n  @Input()\n  freehandCondition?: Condition;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  olChange = new EventEmitter<DrawEvent>();\n  @Output()\n  olChangeActive = new EventEmitter<DrawEvent>();\n  @Output()\n  drawEnd = new EventEmitter<DrawEvent>();\n  @Output()\n  drawStart = new EventEmitter<DrawEvent>();\n  @Output()\n  propertyChange = new EventEmitter<DrawEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Draw(this);\n    this.instance.on('change', (event: DrawEvent) => this.olChange.emit(event));\n    // TODO this.instance.on('change:active', (event: DrawEvent) => this.olChangeActive.emit(event));\n    this.instance.on('drawend', (event: DrawEvent) => this.drawEnd.emit(event));\n    this.instance.on('drawstart', (event: DrawEvent) => this.drawStart.emit(event));\n    // TODO this.instance.on('propertychange', (event: DrawEvent) => this.propertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Select } from 'ol/interaction';\nimport { Layer } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { Collection, Feature } from 'ol';\nimport { SelectEvent, FilterFunction } from 'ol/interaction/Select';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: Select;\n\n  @Input()\n  addCondition?: Condition;\n  @Input()\n  condition?: Condition;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  removeCondition?: Condition;\n  @Input()\n  toggleCondition?: Condition;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: FilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  olChange = new EventEmitter<SelectEvent>();\n  @Output()\n  olSelect = new EventEmitter<SelectEvent>();\n  @Output()\n  propertyChange = new EventEmitter<SelectEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Select(this);\n\n    this.instance.on('change', (event: SelectEvent) => this.olChange.emit(event));\n    this.instance.on('select', (event: SelectEvent) => this.olSelect.emit(event));\n    // TODO this.instance.on('propertychange', (event: SelectEvent) => this.propertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Modify } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { Vector } from 'ol/source';\nimport { ModifyEvent } from 'ol/interaction/Modify';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: Modify;\n\n  @Input()\n  condition?: Condition;\n  @Input()\n  deleteCondition?: Condition;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: Vector;\n\n  @Output()\n  modifyEnd = new EventEmitter<ModifyEvent>();\n  @Output()\n  modifyStart = new EventEmitter<ModifyEvent>();\n  @Output()\n  olChange = new EventEmitter<ModifyEvent>();\n  @Output()\n  olChangeActive = new EventEmitter<ModifyEvent>();\n  @Output()\n  propertyChange = new EventEmitter<ModifyEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Modify(this);\n    this.instance.on('change', (event: ModifyEvent) => this.olChange.emit(event));\n    // TODO this.instance.on('change:active', (event: ModifyEvent) => this.olChangeActive.emit(event));\n    // TODO this.instance.on('propertychange', (event: ModifyEvent) => this.propertyChange.emit(event));\n    this.instance.on('modifyend', (event: ModifyEvent) => this.modifyEnd.emit(event));\n    this.instance.on('modifystart', (event: ModifyEvent) => this.modifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Translate } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Layer } from 'ol/layer';\nimport { TranslateEvent } from 'ol/interaction/Translate';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  olChange: EventEmitter<TranslateEvent>;\n  @Output()\n  propertyChange: EventEmitter<TranslateEvent>;\n  @Output()\n  translateEnd: EventEmitter<TranslateEvent>;\n  @Output()\n  translateStart: EventEmitter<TranslateEvent>;\n  @Output()\n  translating: EventEmitter<TranslateEvent>;\n\n  constructor(private map: MapComponent) {\n    this.olChange = new EventEmitter<TranslateEvent>();\n    this.propertyChange = new EventEmitter<TranslateEvent>();\n    this.translateEnd = new EventEmitter<TranslateEvent>();\n    this.translateStart = new EventEmitter<TranslateEvent>();\n    this.translating = new EventEmitter<TranslateEvent>();\n  }\n\n  ngOnInit() {\n    this.instance = new Translate(this);\n\n    this.instance.on('change', (event: TranslateEvent) => this.olChange.emit(event));\n    // TODO this.instance.on('propertychange', (event: TranslateEvent) => this.propertyChange.emit(event));\n    this.instance.on('translateend', (event: TranslateEvent) => this.translateEnd.emit(event));\n    this.instance.on('translatestart', (event: TranslateEvent) => this.translateStart.emit(event));\n    this.instance.on('translating', (event: TranslateEvent) => this.translating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  label: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.label = this.elementRef.nativeElement.innerHTML;\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<string>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map((cmp) => cmp.label);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { UTFGrid } from 'ol/source';\nimport { Config } from 'ol/source/TileJSON';\n\n@Component({\n  selector: 'aol-source-utfgrid',\n  template: ` <ng-content></ng-content> `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceUTFGridComponent) }],\n})\nexport class SourceUTFGridComponent extends SourceComponent implements OnInit {\n  instance: UTFGrid;\n  @Input() tileJSON: Config;\n  @Input() url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new UTFGrid(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SimpleGeometryComponent } from './lib/geom/simplegeometry.component';\nimport { SourceComponent } from './lib/sources/source.component';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport { GeometryCircleComponent } from './lib/geom/geometrycircle.component';\nimport { GeometryLinestringComponent } from './lib/geom/geometrylinestring.component';\nimport { GeometryMultiLinestringComponent } from './lib/geom/geometrymultilinestring.component';\nimport { GeometryMultiPointComponent } from './lib/geom/geometrymultipoint.component';\nimport { GeometryMultiPolygonComponent } from './lib/geom/geometrymultipolygon.component';\nimport { GeometryPointComponent } from './lib/geom/geometrypoint.component';\nimport { GeometryPolygonComponent } from './lib/geom/geometrypolygon.component';\nimport { CoordinateComponent } from './lib/coordinate.component';\nimport { CollectionCoordinatesComponent } from './lib/collectioncoordinates.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionsComponent } from './lib/attributions.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { SourceUTFGridComponent } from './lib/sources/utfgrid.component';\nimport { LayerComponent } from './lib/layers/layer.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  SimpleGeometryComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"]}